{"version":3,"file":"static/js/68.bbe5ac97.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","webpack://react-homework-template/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.contacts.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","redux/filter/selectors.filter.js","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactsItem/ContactsItem.module.css?5f2a","components/ContactsList/ContactsItem/ContactsItem.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\",\"title\":\"Section_title__SLHvV\"};","import React from 'react'\nimport PropTypes from 'prop-types'\nimport s from './Section.module.css';\n\nfunction Section({children, title}) {\n  return (\n    <section className={s.section}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </section>\n  )\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n\n}\n\nexport default Section;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"wrapper\":\"ContactForm_wrapper__-Umw-\",\"label\":\"ContactForm_label__-cVXI\",\"span\":\"ContactForm_span__w4N46\",\"input\":\"ContactForm_input__Bl93P\",\"submit\":\"ContactForm_submit__eYq7N\"};","\nexport const getALLContacts =  state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport s from './ContactForm.module.css';\nimport { toast } from 'react-toastify';\n\nimport { getALLContacts } from 'redux/contacts/selectors.contacts';\nimport { addNewContact } from 'redux/contacts/operations.contacts';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getALLContacts);\n  const dispatch = useDispatch();\n\n  const createNewContact = newContact => {\n    if (\n      contacts.find(\n        ({ name }) => name.toLowerCase() === newContact.name.toLowerCase()\n      )\n    ) {\n      toast.error(`${newContact.name} is already in your contacts list`);\n      return;\n    }\n    dispatch(addNewContact(newContact));\n  };\n\n  const handleSubmitForm = event => {\n    event.preventDefault();\n    const newContact = { name, number };\n    createNewContact(newContact);\n    resetForm();\n  };\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmitForm}>\n      <div className={s.wrapper}>\n        <label className={s.label}>\n          <span className={s.span}>Name</span>\n          <input\n            onChange={handleInputChange}\n            className={s.input}\n            value={name}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"John Smith\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label className={s.label}>\n          <span className={s.span}>Number</span>\n          <input\n            onChange={handleInputChange}\n            className={s.input}\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"000-000-0000\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n      </div>\n\n      <button type=\"submit\" name=\"submit\" className={s.submit}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","export const getFilter = state => state.filter;\n","import React from 'react';\nimport s from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContactsAction } from 'redux/filter/action.filter';\nimport { getALLContacts } from 'redux/contacts/selectors.contacts';\nimport { getFilter } from 'redux/filter/selectors.filter';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getALLContacts);\n\n  const handleFilterInput = event => {\n    const { value } = event.target;\n    dispatch(filterContactsAction(value));\n  };\n\n  if(contacts.length)\n  {\n    return (\n      <label className={s.label}>\n      Write a name to find the contact:\n      <input\n        className={s.input}\n        type=\"text\"\n        value={filter}\n        name=\"filter\"\n        onChange={handleFilterInput}\n        placeholder='start type a name'\n      ></input>\n    </label>\n    )\n  }\n\n}\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactsItem_item__teaw-\",\"spanName\":\"ContactsItem_spanName__lvYw7\",\"spanTel\":\"ContactsItem_spanTel__e-emF\",\"button\":\"ContactsItem_button__S+pxM\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactsItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { deleteContact } from 'redux/contacts/operations.contacts';\nimport { ColorRing } from 'react-loader-spinner';\n\nfunction ContactsItem({ id, name, number }) {\n  const dispatch = useDispatch();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleDelete = contactId => {\n    setIsLoading(true);\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <li className={s.item}>\n      <span className={s.spanName}>{name}:</span>\n      <span className={s.spanTel}>{number}</span>\n      <button\n        className={s.button}\n        type=\"button\"\n        name=\"delete\"\n        onClick={() => handleDelete(id)}\n        disabled ={isLoading}\n      >{isLoading && <ColorRing height='20' width='20' colors={['#b8c480', '#B2A3B5', '#F4442E', '#51E5FF', '#429EA6']}/> }\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactsItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactsItem;\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactsList_list__mmE3Y\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactsItem from './ContactsItem';\nimport s from './ContactsList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getContacts } from 'redux/contacts/operations.contacts';\nimport { getALLContacts } from 'redux/contacts/selectors.contacts';\nimport { getFilter } from 'redux/filter/selectors.filter';\n\nfunction ContactsList() {\n  const contacts = useSelector(getALLContacts);\n  const dispatch = useDispatch();\n\n  const filter = useSelector(getFilter);\n  const identicFilter = filter.toLowerCase();\n  const filteredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(identicFilter)\n  );\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  if(!contacts.length){\n    return <div>There are no contacts here=( Please add a new contact.</div>\n  }\n\n  return (\n    <ul className={s.list}>\n      {filteredContacts.map(({ name, id, number }) => (\n        <ContactsItem name={name} key={id} id={id} number={number} />\n      ))}\n    </ul>\n  );\n}\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactsList;\n","import Section from 'components/Section'\nimport  Container  from 'components/Container';\nimport ContactForm from 'components/ContactForm';\nimport Loader from 'components/Loader';\nimport Filter from 'components/Filter';\nimport ContactsList from 'components/ContactsList';\nimport { useSelector } from 'react-redux';\nimport { getIsLoading } from 'redux/contacts/selectors.contacts';\n\nfunction ContactsPage() {\n  const isLoading = useSelector(getIsLoading);\n  return (\n    <Section title=\"PhoneBook\">\n        <Container>\n          <ContactForm />\n          <h2 className='titleContacts'>Contacts</h2>\n          {isLoading && <Loader/>}\n          <Filter />\n          <ContactsList />\n        </Container>\n      </Section>\n  )\n}\n\nexport default ContactsPage\n"],"names":["children","className","s","title","getALLContacts","state","contacts","items","getIsLoading","isLoading","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","handleInputChange","event","target","value","resetForm","onSubmit","preventDefault","newContact","find","toLowerCase","toast","addNewContact","createNewContact","onChange","type","placeholder","pattern","required","getFilter","filter","length","filterContactsAction","id","setIsLoading","onClick","contactId","deleteContact","disabled","height","width","colors","identicFilter","filteredContacts","includes","useEffect","getContacts","map","Section","Container","Loader"],"sourceRoot":""}